import matplotlib.pyplot as plt
import numpy as np
import math
#
# # 25 environments with different entropy coefficient
# entropy      = [0.0, 0.0001, 0.001, 0.01, 0.05, 0.1,  0.2,  0.3,  0.4, 0.5,  0.6,  0.8,  1]
# seed_0_train = [0.84, 0.84, 0.96,  0.96, 1.0,  1.0,  1.0,  1.0,  1.0, 1.0,  1.0,  1.0,  1.0]
# seed_0_test  = [0.39, 0.35, 0.40,  0.50, 0.16, 0.14, 0.12, 0.11, 0.1, 0.13, 0.11, 0.12, 0.12]
#
# seed_1235_entropy = [0.0, 0.0001, 0.001, 0.01, 0.05, 0.1,  0.2,  0.3,  0.4, 0.5,  0.6,  0.8,  1]
# seed_1235_train   = [0.52, 0.88,   1.0,   0.96, 1.0,  1.0,  1.0,  1.0,  1.0, 1.0,  1.0,  1.0,  1.0]
# seed_1235_test    = [0.2, 0.35,   0.60,  0.50, 0.13, 0.11, 0.1,  0.1,  0.12, 0.11, 0.11, 0.12, 0.13]
#
# seed_354_entropy = [0.0, 0.0001, 0.001, 0.01, 0.05, 0.1,  0.2,  0.3,  0.4, 0.5,  0.6,  0.8,  1]
# seed_354_train   = [0.96, 0.68,   0.96,  0.84, 1.0,  1.0,  1.0,  1.0,  1.0, 1.0,  1.0,  1.0,  1.0]
# seed_354_test    = [0.58, 0.50,   0.41,  0.35, 0.1,  0.1,  0.12, 0.13, 0.11, 0.15, 0.12, 0.15, 0.1]
#
# seed_6872_entropy = [0.0, 0.0001, 0.001, 0.01, 0.05, 0.1,  0.2,  0.3,  0.4, 0.5,  0.6,  0.8]
# seed_6872_train   = [0.96, 0.92,   0.92,  0.92, 1.0,  1.0,  1.0,  1.0,  1.0, 1.0,  1.0,  1.0]
# seed_6872_test    = [0.44, 0.37,   0.36,  0.25, 0.1,  0.12,  0.11, 0.11, 0.12, 0.12, 0.13, 0.12]
#
# seed_7962_entropy = [0.0,  0.0001, 0.001, 0.01, 0.05, 0.1,  0.2,  0.3,  0.4,   0.5,  0.6,  0.8]
# seed_7962_train   = [0.96, 0.96,   0.96,  0.96, 1.0,  1.0,  1.0,  1.0,  1.0,   1.0,  1.0,  1.0]
# seed_7962_test    = [0.46, 0.45,   0.56,  0.53, 0.12, 0.12,  0.14, 0.12, 0.11, 0.12, 0.10, 0.12]
#
# plt.plot(entropy, seed_0_train, 'bo-', label='train seed 0')
# plt.plot(entropy, seed_0_test, 'bo--', label='test seed 0')
# plt.plot(seed_1235_entropy, seed_1235_train, 'yo-', label='train seed 1235')
# plt.plot(seed_1235_entropy, seed_1235_test, 'yo--', label='test seed 1235')
# plt.plot(seed_354_entropy, seed_354_train, 'ro-', label='train seed 354')
# plt.plot(seed_354_entropy, seed_354_test, 'ro--', label='test seed 354')
# plt.plot(seed_6872_entropy, seed_6872_train, 'mo-', label='train seed 6872')
# plt.plot(seed_6872_entropy, seed_6872_test, 'mo--', label='test seed 6872')
# plt.plot(seed_7962_entropy, seed_7962_train, 'ko-', label='train seed 7962')
# plt.plot(seed_7962_entropy, seed_7962_test, 'ko--', label='test seed 7962')
# plt.xlabel('Entropy')
# plt.ylabel('Reward')
# plt.legend()
# plt.show()
#
# # 25 environments with different L2 coefficient
# L2      =         [0.0001, 0.001, 0.01, 0.05, 0.1,  0.2,  0.3,  0.4]
# seed_0_train_L2 = [0.88,   0.88,  0.96, 0.96, 0.96, 1.0,  1.0,  1.0]
# seed_0_test_L2  = [0.32,   0.40,  0.50, 0.49, 0.16, 0.14, 0.17, 0.14]
#
# L2      =            [0.0001, 0.001, 0.01, 0.05, 0.1,  0.2,  0.3,  0.4]
# seed_7962_train_L2 = [0.96,   0.96,  0.96, 1.0,  1.0,  1.0,  1.0,  1.0]
# seed_7962_test_L2  = [0.52,   0.41,  0.51, 0.39, 0.17, 0.15, 0.15, 0.155]
#
# L2      =            [0.0001, 0.001, 0.01, 0.05, 0.1,  0.2,  0.3,  0.4]
# seed_1235_train_L2 = [0.71,   0.92,  0.96, 0.96, 0.96, 1.0,  1.0,  1.0]
# seed_1235_test_L2  = [0.38,   0.51,  0.57, 0.34, 0.11, 0.13, 0.16, 0.12]
#
# L2      =            [0.0001, 0.001, 0.01, 0.05, 0.1,  0.2,  0.3,  0.4]
# seed_354_train_L2 =  [0.88,   0.72,  0.92, 1.0,  0.96, 1.0,  1.0,  1.0]
# seed_354_test_L2  =  [0.43,   0.38,  0.4,  0.37, 0.15, 0.11, 0.1,  0.1]
#
# L2      =            [0.0001, 0.001, 0.01, 0.05, 0.1,  0.2,  0.3,  0.4]
# seed_6872_train_L2 = [0.92,   0.92,  0.76, 0.92, 0.96, 1.0,  1.0,  0.96]
# seed_6872_test_L2  = [0.47,   0.28,  0.23, 0.31, 0.12, 0.1,  0.11, 0.1]
#
# plt.plot(L2, seed_0_train_L2, 'bo-', label='train seed 0')
# plt.plot(L2, seed_0_test_L2, 'bo--', label='test seed 0')
# plt.plot(L2, seed_7962_train_L2, 'go-', label='train seed 7962')
# plt.plot(L2, seed_7962_test_L2, 'go--', label='test seed 7962')
# plt.plot(L2, seed_1235_train_L2, 'ro-', label='train seed 1235')
# plt.plot(L2, seed_1235_test_L2, 'ro--', label='test seed 1235')
# plt.plot(L2, seed_354_train_L2, 'yo-', label='train seed 354')
# plt.plot(L2, seed_354_test_L2, 'yo--', label='test seed 354')
# plt.plot(L2, seed_6872_train_L2, 'ko-', label='train seed 6872')
# plt.plot(L2, seed_6872_test_L2, 'ko--', label='test seed 6872')
# plt.xlabel('L2')
# plt.ylabel('Reward')
# plt.legend()
# plt.show()
#
# # Rotation!
# # reward for different number of envs
# num_env_rot = [25,   50,   100,  150,  208, 312, 416]
# train_rot   = [1.,   0.94, 0.92, 1.,   1.,  1.,   1.]
# test_rot    = [0.14, 0.2,  0.81, 0.99, 1.,  1.,   1.]
# plt.plot(num_env_rot, train_rot, 'bo-', label='train seed 0')
# plt.plot(num_env_rot, test_rot, 'bo--', label='test seed 0')
# plt.xlabel('num level')
# plt.ylabel('Reward')
# plt.legend()
# plt.show()
#
# # 25 environments with different entropy coefficient
# entropy      = [0.0,  0.0001, 0.001, 0.01, 0.05, 0.1,  0.2,  0.3,  0.4,  0.5,  0.6, 0.7, 0.8]
# seed_0_train = [0.96, 0.88,   0.88,  0.92, 1.,   1.,   1.,   1.,   1.,   1.,   1.,  1.,  1. ]
# seed_0_test  = [0.35, 0.3,    0.28,  0.33, 0.14, 0.11, 0.14, 0.13, 0.12, 0.13, 0.12,0.1, 0.12]
#
# seed_1235_train = [0.92, 0.88, 0.92,  0.92, 1.,  1.,   1.,   1.,   1.,   1.,   1.,  1.,  1. ]
# seed_1235_test  = [0.43, 0.35, 0.34,  0.33, 0.14,0.11, 0.11, 0.1, 0.12, 0.12, 0.1,0.11, 0.08]
#
# seed_354_train = [0.92, 0.88, 0.8,   0.76,  1.,  1.,   1.,   1.,   1.,   1.,   1.,   1.,   1. ]
# seed_354_test  = [0.36, 0.35, 0.28,  0.30,  0.12,0.09, 0.13, 0.11, 0.13, 0.11, 0.15, 0.14, 0.12]
#
# seed_7962_train = [0.88, 0.92, 0.84, 0.88,  1.,  1.,   0.96,   1.,   1.,   1.,   1.,   1.,   1. ]
# seed_7962_test  = [0.36, 0.43, 0.36, 0.34,  0.17,0.16, 0.13, 0.13, 0.12, 0.12, 0.13, 0.12, 0.15]
#
# plt.plot(entropy, seed_0_train, 'bo-', label='train seed 0')
# plt.plot(entropy, seed_0_test, 'bo--', label='test seed 0')
# plt.plot(entropy, seed_1235_train, 'yo-', label='train seed 1235')
# plt.plot(entropy, seed_1235_test, 'yo--', label='test seed 1235')
# plt.plot(entropy, seed_354_train, 'ro-', label='train seed 354')
# plt.plot(entropy, seed_354_test, 'ro--', label='test seed 354')
# plt.plot(entropy, seed_7962_train, 'ko-', label='train seed 7962')
# plt.plot(entropy, seed_7962_test, 'ko--', label='test seed 7962')
# plt.title('With rotation')
# plt.xlabel('Entropy')
# plt.ylabel('Reward')
# plt.legend()
# plt.show()


# # log1
# a1_vec = np.linspace(1.0, -90.0, num=10)
# a1 = [1.0, -9.11111111111111, -19.22222222222222, -29.333333333333332, -39.44444444444444, -49.55555555555556, -59.666666666666664, -69.77777777777777, -79.88888888888889, -90.0]
# sigmoid_a1 = [0.7311, 1.1042e-04, 4.4864e-09, 1.8226e-13, 7.4045e-18, 3.0081e-22, 1.2221e-26, 4.9647e-31, 2.0170e-35, 0.0000]
# loss = [0.016298329457640648,0.01665498875081539,0.01641656458377838,0.01636047288775444,0.017016811296343803,0.016383053734898567,0.016371777281165123,0.01630246639251709,0.01646922528743744,0.016426729038357735]
# val_loss = [0.016145508736371994,0.016497768461704254,0.016263438388705254,0.016193410381674767,0.01687324047088623,0.016232086345553398,0.016218392178416252,0.01614747755229473,0.016306038945913315,0.01626594550907612]
# corr = [0.8369758129119873,0.860619306564331,0.8434465527534485,0.847197413444519,0.8713625073432922,0.8523037433624268,0.8535473346710205,0.8487005829811096,0.844771683216095,0.847157895565033]
#
# def sigmoid(x):
#   return 1 / (1 + math.exp(-x))
#
# # define vectorized sigmoid
# sigmoid_v = np.vectorize(sigmoid)
#
# sigmoid_a1_check = sigmoid_v(a1_vec)
#
# # plt.plot(a1, loss, label='loss')
# # plt.plot(a1, val_loss, label='val loss')
# # plt.plot(a1, corr, label='corr')
# # # plt.title('With rotation')
# # plt.xlabel('a1')
# # # plt.ylabel('Reward')
# # plt.legend()
# # plt.show()
#
# plt.plot(sigmoid_a1, loss, label='loss')
# plt.plot(sigmoid_a1, val_loss, label='val loss')
#
# # plt.title('With rotation')
# plt.xscale('log')
# plt.xlabel('sigmoid_a1')
# plt.ylabel('loss')
# plt.legend()
# plt.show()
#
# plt.plot(sigmoid_a1, corr, label='corr')
# plt.xscale('log')
# plt.xlabel('sigmoid_a1')
# plt.ylabel('corr')
# plt.legend()
# plt.show()
#
# loss_2 = [0.016298329457640648, 0.016974009573459625, 0.016717638820409775, 0.016666410490870476, 0.017330752685666084, 0.016687864437699318, 0.01667807623744011,0.016615087166428566, 0.016791686415672302, 0.01673734560608864]
# val_loss_2 = [0.016145508736371994, 0.01673431135714054, 0.016495265066623688, 0.01643994450569153, 0.017106177285313606, 0.01645924709737301, 0.016448941081762314,0.01638193614780903, 0.016553673893213272, 0.016504107043147087]
# corr_2 = [0.8369758129119873, 0.9911458492279053, 0.990952730178833, 0.990493893623352, 0.9915638566017151,0.9910083413124084, 0.9915428757667542,0.9903689026832581,0.9900480508804321,0.990249514579773]
#
# plt.plot(sigmoid_a1, loss_2, label='loss')
# plt.plot(sigmoid_a1, val_loss_2, label='val loss')
#
# plt.xscale('log')
# plt.xlabel('sigmoid_a2')
# plt.ylabel('loss')
# plt.legend()
# plt.show()
#
# plt.plot(sigmoid_a1, corr_2, label='corr')
# plt.xscale('log')
# plt.xlabel('sigmoid_a2')
# plt.ylabel('corr')
# plt.legend()
# plt.show()

train_25 = [[0.076, 0.159, 0.321, 0.06, 0.49, 0.944],  # 6
   [0.375, 0.728, 0.414, 0.184, 0.603, 0.383],  # 2
   [0.525, 0.841, 0.249, 0.355, 0.57, 0.934],  # 6
   [0.834, 0.466, 0.295, 0.038, 0.988, 0.073],  # 5
   [0.36, 0.805, 0.499, 0.113, 0.476, 0.717],  # 2
   [0.981, 0.411, 0.533, 0.572, 0.437, 0.778],  # 1
   [0.456, 0.084, 0.752, 0.925, 0.888, 0.037],  # 4
   [0.211, 0.353, 0.992, 0.538, 0.261, 0.603],  # 3
   [0.213, 0.774, 0.928, 0.257, 0.844, 0.062],  # 3
   [0.323, 0.625, 0.743, 0.216, 0.918, 0.337],  # 5
   [0.01891801, 0.78047335, 0.13120012, 0.14672056, 0.05945085, 0.01512077],  # 2
   [0.55368842, 0.52939036, 0.72235884, 0.9893397, 0.13359386, 0.75881976],  # 4
   [0.27498474, 0.93254546, 0.96660071, 0.04061222, 0.54954941, 0.55050314],  # 3
   [0.60444392, 0.91122862, 0.00310513, 0.27571081, 0.11575216, 0.02846643],  # 2
   [0.26380986, 0.73890683, 0.52585752, 0.61425811, 0.27416517, 0.99662264],  # 6
   [0.58043721, 0.13505389, 0.54580814, 0.21496861, 0.78752624, 0.53733551],  # 5
   [0.81661991, 0.59362704, 0.84309718, 0.51686857, 0.00501944, 0.03844539],  # 3
   [0.64545611, 0.02579325, 0.18808368, 0.89585609, 0.58277973, 0.84766255],  # 4
   [0.10375267, 0.11166068, 0.3657824, 0.15392747, 0.52210355, 0.56073071],  # 6
   [0.99626614, 0.02869837, 0.04904237, 0.50727304, 0.90120693, 0.51891313],  # 1
   [0.02470811, 0.69273466, 0.57286804, 0.36748555, 0.34783015, 0.31934225],  # 2
   [0.91138232, 0.79204389, 0.81667496, 0.03328246, 0.28039698, 0.35511668],  # 1
   [0.09022578, 0.21121132, 0.11206563, 0.97331993, 0.87026452, 0.96314169],  # 4
   [0.05946778, 0.89392153, 0.18829576, 0.18404594, 0.96824312, 0.69029678],  # 5
   [0.97775388, 0.47861151, 0.09594251, 0.43096626, 0.29108497, 0.52482397]]
val_25 = [[0.98948062, 0.37708537, 0.331013, 0.69333325, 0.13124786, 0.88920003],
   [0.68237267, 0.08225824, 0.21834965, 0.87589398, 0.70003436, 0.00747251],
   [0.1609193, 0.2854119, 0.7559782, 0.56310084, 0.31743964, 0.63907489],
   [0.35077164, 0.45320645, 0.83024209, 0.2019887, 0.00781196, 0.65621887],
   [0.0633701, 0.51787492, 0.86057012, 0.1542816, 0.34795482, 0.76183472],
   [0.05661702, 0.81537868, 0.54159523, 0.24150988, 0.80161598, 0.73641051],
   [0.08267289, 0.54077583, 0.92198802, 0.22542473, 0.68597108, 0.18538359],
   [0.02403415, 0.54196871, 0.84891156, 0.6448765, 0.48396221, 0.81369304],
   [0.20072841, 0.77927205, 0.60569877, 0.79944944, 0.4583432, 0.85380735],
   [0.35281025, 0.34826374, 0.78951095, 0.3102897, 0.75779163, 0.10942438],
   [0.13450107, 0.97161668, 0.96107628, 0.96341468, 0.45336276, 0.71177643],
   [0.6525207, 0.02784637, 0.53778085, 0.86305474, 0.57162949, 0.66869977],
   [0.37037574, 0.25950368, 0.62888508, 0.49180031, 0.02295407, 0.72735831],
   [0.83755545, 0.54925098, 0.81712092, 0.60140652, 0.64817518, 0.18898978],
   [0.02032885, 0.01263567, 0.92663379, 0.61574462, 0.86945788, 0.94492315],
   [0.21675219, 0.67281203, 0.57920967, 0.09366986, 0.5876348, 0.69001061],
   [0.63990541, 0.90458126, 0.01816806, 0.15577517, 0.6541077, 0.38570712],
   [0.86316116, 0.36810602, 0.64426344, 0.37772334, 0.15496514, 0.90347212],
   [0.38393111, 0.51326142, 0.38421059, 0.50533497, 0.02014076, 0.80952414],
   [0.83281928, 0.59629474, 0.01652585, 0.85030557, 0.74296672, 0.94735433],
   [0.40128429, 0.55985262, 0.26350271, 0.21997737, 0.42450969, 0.7212289],
   [0.13821577, 0.07893783, 0.21247979, 0.93528661, 0.02002084, 0.31862179],
   [0.63407434, 0.98519196, 0.98856102, 0.381836, 0.43946035, 0.95008078],
   [0.5446136, 0.24205709, 0.76318612, 0.31159283, 0.29714141, 0.60059216],
   [0.72662477, 0.92363499, 0.73680628, 0.4617172, 0.82390518, 0.26765032]]

for a in range (6):
  sum_tarin = 0
  sum_val = 0
  for i in range(25):
    sum_tarin += train_25[i][a]/25
    sum_val += val_25[i][a]/25

  print("sum a={}: train {}, val {}, train-val {}".format(a,sum_tarin,sum_val,sum_tarin-sum_val))